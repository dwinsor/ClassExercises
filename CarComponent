public class CarTestDriver {
	
	public static void main(String args[]) {
		CarComponent hondaCar = new Car("2016 CR-Z EX", "Manual", 22140.00);
		CarComponent exteriorColor = new CarItem("Exterior: Milano Red", "", 0.0);
		CarComponent interiorColor = new CarItem("Interior: Black/Orange", "", 0.0);
		CarComponent tailgateSpoiler = new CarItem("Tailgate Spoiler", "", 430.00);
		CarComponent floorMats = new CarItem("All Season Floor Mats", "", 99.00);
		CarComponent destAndHandle = new CarItem("Destination and handling", "", 835.00);
		
		hondaCar.add(exteriorColor);
		hondaCar.add(interiorColor);
		hondaCar.add(tailgateSpoiler);
		hondaCar.add(floorMats);
		hondaCar.add(destAndHandle);
		
		//summary.add(hondaCar);
				
		//Client client = new Client(summary);		
		//client.printCarSummary();	
		
	}

}

--------------------------------------------------------------------------


public class Client {
	CarComponent carSummary;
	
	public Client(CarComponent carSummary) {
		this.carSummary = carSummary;
	}
	
	public void printCarSummary() {
		carSummary.print();
	}

}
--------------------------------------------------------------------------


public abstract class CarComponent {
	public void add(CarComponent carComponent) {
		throw new UnsupportedOperationException();
	}

	public void remove(CarComponent carComponent) {
		throw new UnsupportedOperationException();
	}

	public CarComponent getChild(int i) {
		throw new UnsupportedOperationException();
	}

	public String getName() {
		throw new UnsupportedOperationException();
	}

	public String getDescription() {
		throw new UnsupportedOperationException();
	}
	
	public double getPrice() {
		throw new UnsupportedOperationException();
	}
	
	public String getColors() {
		throw new UnsupportedOperationException();
	}
	
	public String getAccessories() {
		throw new UnsupportedOperationException();
	}

	public void print() {
		throw new UnsupportedOperationException();
	}

}
--------------------------------------------------------------------------
import java.util.ArrayList;

public class CarItem extends CarComponent {
	ArrayList<CarComponent> carComponents = new ArrayList<CarComponent>();
	String name;
	String description;
	double price;
	
	public CarItem(String name, String description, double price) {
		this.name = name;
		this.description = description;
		this.price = price;
	}
	
	public String getName() {
		return name;
	}
	
	public String getDescription() {
		if (description.equals(null)) {
			description = "";
		}
		return description;
	}
	
	public double getPrice() {
		return price;
	}
	
	public void print() {
		System.out.print(" " + getName());
		System.out.print("\t" + getDescription());
		if (getPrice() == 0.0) {
			System.out.println("");
		} else {
			System.out.print("\t" + getPrice());
		}
	}
}
}

--------------------------------------------------------------------------

import java.util.ArrayList;
import java.util.Iterator;

public class Car extends CarComponent {
	ArrayList<CarComponent> carComponents = new ArrayList<CarComponent>();
	String name;
	double price;
	String manualSetting;
	double totalPrice;
	
	public Car(String name, String manualSetting, double price) {
		this.name = name;
		this.manualSetting = manualSetting;
		this.price = price;
	}

	public void add(CarComponent carComponent) {
		carComponents.add(carComponent);
	}
	
	public void remove(CarComponent carComponent) {
		carComponents.remove(carComponent);
	}
	
	public CarComponent getChild(int i) {
		return carComponents.get(i);
	}
	
	public String getName() {
		return name;
	}
	
	public String getManualSetting() {
		return manualSetting;
	}
	
	public double getPrice() {
		return price;
	}
	
	public void print() {
		System.out.println("Summary");
		System.out.println("Model");
		
		Iterator<CarComponent> iterator = carComponents.iterator();
		while (iterator.hasNext()) {
			CarComponent carComponent = iterator.next();
			carComponent.print();
			totalPrice = totalPrice + carComponent.getPrice();
		}
		
		System.out.println("\t\t Total MSRP as built " + totalPrice);
	}

}
