package headfirst.iterator.dinermergers;

import java.util.LinkedList;

public class VesuvioMenu {
	LinkedList<MenuItem> menuList;

	public VesuvioMenu() {
		menuList = new LinkedList<>();
		addItem("Cheese Ravioli", "Pillows of pasta filled with cheese, baked in tomato sauce and mozzarella cheese",
				true, 11.00);
		addItem("Penne Sausage and Mushrooms", "Sliced sausage and mushrooms sautéed in a white wine garlic sauce",
				false, 10.75);
		addItem("FraDiavolo", "Shrimp and clams sautéed with garlic, in a spicy marinara sauce, served over linguini",
				false, 14.95);
	}

	private void addItem(String name, String description, boolean vegetarian, double price) {
		MenuItem menuItem = new MenuItem(name, description, vegetarian, price);
		menuList.add(menuItem);

	}

	public LinkedList<MenuItem> getMenuItems() {
		return menuList;
	}

}


-------------------------------------------------------------

package headfirst.iterator.dinermergers;

import java.util.LinkedList;

public class MenuItem {
  String name;
  String description;
  boolean vegetarian;
  double price;


  public MenuItem(String name, String description, boolean vegetarian, double price) {
    this.name = name;
    this.description = description;
    this.vegetarian = vegetarian;
    this.price = price;
  }

  public String getName() {
    return name;
  }

  public String getDescription() {
    return description;
  }

  public double getPrice() {
    return price;
  }

  public boolean isVegetarian() {
    return vegetarian;
  }

  public String toString() {
    return (name + ", $" + price + "\n   " + description);
  }
}

---------------------------------------------------------------

package headfirst.iterator.dinermergers;

import java.util.ArrayList;
import java.util.LinkedList;

public class Waitress {

  private PancakeHouseMenu pancakeHouseMenu;
  private DinerMenu dinerMenu;
  private VesuvioMenu vesuvioMenu;

  public Waitress(PancakeHouseMenu pancakeHouseMenu, DinerMenu dinerMenu, VesuvioMenu vesuvioMenu) {
    this.pancakeHouseMenu = pancakeHouseMenu;
    this.dinerMenu = dinerMenu;
    this.vesuvioMenu = vesuvioMenu;
  }

  public void printMenu() {
    ArrayList<MenuItem> menuItems = pancakeHouseMenu.getMenuItems();
    MenuItem[] menuItemsAs = dinerMenu.getMenuItems();
    LinkedList<MenuItem> menuList = vesuvioMenu.getMenuItems();

    System.out.println("MENU\n----\nBREAKFAST");
    for (int i = 0; i < menuItems.size(); i++) {
      MenuItem menuItem = menuItems.get(i);
      System.out.print(menuItem.getName() + ", ");
      System.out.print(menuItem.getPrice() + " -- ");
      System.out.println(menuItem.getDescription());
    }
    System.out.println("\nLUNCH");
    for (int i = 0; i < menuItemsAs.length; i++) {
      MenuItem menuItem = menuItemsAs[i];
      System.out.print(menuItem.getName() + ", ");
      System.out.print(menuItem.getPrice() + " -- ");
      System.out.println(menuItem.getDescription());
    }
    
    System.out.println("\nDINNER");
    for (int i = 0; i < menuList.size(); i++) {
    	MenuItem menuItem = menuList.get(i);
    	System.out.print(menuItem.getName() + ", ");
    	System.out.print(menuItem.getPrice() + " -- ");
    	System.out.println(menuItem.getDescription());
    }
  }

}
------------------------------------------

package headfirst.iterator.dinermergers;

public class DinerMenu {
  static final int MAX_ITEMS = 6;
  int numberOfItems = 0;
  MenuItem[] menuItems;

  public DinerMenu() {
    menuItems = new MenuItem[3];
    addItem("Vegetarian BLT", "(Fakin') Bacon with lettuce & tomato on whole wheat", true, 2.99);
    addItem("BLT", "Bacon with lettuce & tomato on whole wheat", false, 2.99);
    addItem("Soup of the day", "Soup of the day, with a side of potato salad", false, 3.29);
  }

  public void addItem(String name, String description, boolean vegetarian, double price) {
    MenuItem menuItem = new MenuItem(name, description, vegetarian, price);
    if (numberOfItems >= MAX_ITEMS) {
      System.err.println("Sorry, menu is full!  Can't add item to menu");
    } else {
      menuItems[numberOfItems] = menuItem;
      numberOfItems = numberOfItems + 1;
    }
  }

  public MenuItem[] getMenuItems() {
    return menuItems;
  }

  // other menu methods here
}

-------------------------------------------------------

package headfirst.iterator.dinermergers;

public class MenuTestDrive {

  public static void main(String args[]) {
    PancakeHouseMenu pancakeHouseMenu = new PancakeHouseMenu();
    DinerMenu dinerMenu = new DinerMenu();
    VesuvioMenu vesuvioMenu = new VesuvioMenu();

    Waitress waitress = new Waitress(pancakeHouseMenu, dinerMenu, vesuvioMenu);
    waitress.printMenu();
  }

}


-------------------------------------------------------------


package headfirst.iterator.dinermergers;

import java.util.ArrayList;

public class PancakeHouseMenu {
  ArrayList<MenuItem> menuItems;

  public PancakeHouseMenu() {
    menuItems = new ArrayList<MenuItem>();

    addItem("K&B's Pancake Breakfast", "Pancakes with scrambled eggs, and toast", true, 2.99);

    addItem("Regular Pancake Breakfast", "Pancakes with fried eggs, sausage", false, 2.99);

    addItem("Blueberry Pancakes", "Pancakes made with fresh blueberries", true, 3.49);

    addItem("Waffles", "Waffles, with your choice of blueberries or strawberries", true, 3.59);
  }

  public void addItem(String name, String description, boolean vegetarian, double price) {
    MenuItem menuItem = new MenuItem(name, description, vegetarian, price);
    menuItems.add(menuItem);
  }

  public ArrayList<MenuItem> getMenuItems() {
    return menuItems;
  }

  public String toString() {
    return "Objectville Pancake House Menu";
  }

  // other menu methods here
}
